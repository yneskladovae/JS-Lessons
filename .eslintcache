[{"D:\\Programming\\IT-Incubator\\JS Lessons\\src\\index.tsx":"1","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\redux\\state.ts":"2","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\App.tsx":"3","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\redux\\currencyReducer.ts":"4","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\lessons\\lesson8\\lesson8.ts":"5","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\lessons\\lesson2\\lesson2.ts":"6","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\lessons\\lesson6\\lesson6.ts":"7","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\lessons\\lesson5\\lesson5.ts":"8","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\lessons\\lesson7\\lesson7.ts":"9","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\lessons\\lesson1\\lesson1.tsx":"10","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\lessons\\lesson3\\Lesson3.tsx":"11","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\lessons\\lesson4\\Lesson4.tsx":"12","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\lessons\\lesson8\\lesson_8.js":"13","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\lessons\\lesson3\\API.ts":"14","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\lessons\\lesson3\\lesson_3.ts":"15","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\lessons\\lesson4\\lesson_4.ts":"16","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx":"17","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\redux\\actions.ts":"18","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx":"19"},{"size":319,"mtime":1609752860853,"results":"20","hashOfConfig":"21"},{"size":286,"mtime":1609751766196,"results":"22","hashOfConfig":"21"},{"size":592,"mtime":1681122520303,"results":"23","hashOfConfig":"21"},{"size":1088,"mtime":1609753971088,"results":"24","hashOfConfig":"21"},{"size":95,"mtime":1609852934598,"results":"25","hashOfConfig":"21"},{"size":5878,"mtime":1680527200690,"results":"26","hashOfConfig":"21"},{"size":3540,"mtime":1609845248077,"results":"27","hashOfConfig":"21"},{"size":4886,"mtime":1602915922000,"results":"28","hashOfConfig":"21"},{"size":2044,"mtime":1609845289163,"results":"29","hashOfConfig":"21"},{"size":860,"mtime":1609756877852,"results":"30","hashOfConfig":"21"},{"size":1599,"mtime":1601709406000,"results":"31","hashOfConfig":"21"},{"size":513,"mtime":1681125722693,"results":"32","hashOfConfig":"21"},{"size":6168,"mtime":1609924725964,"results":"33","hashOfConfig":"21"},{"size":326,"mtime":1601709172000,"results":"34","hashOfConfig":"21"},{"size":580,"mtime":1613889966000,"results":"35","hashOfConfig":"21"},{"size":6726,"mtime":1681130952204,"results":"36","hashOfConfig":"21"},{"size":3824,"mtime":1609761222531,"results":"37","hashOfConfig":"21"},{"size":843,"mtime":1609760554269,"results":"38","hashOfConfig":"21"},{"size":3871,"mtime":1609757735301,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1uhf3rh",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"D:\\Programming\\IT-Incubator\\JS Lessons\\src\\index.tsx",[],["90","91"],"D:\\Programming\\IT-Incubator\\JS Lessons\\src\\redux\\state.ts",[],"D:\\Programming\\IT-Incubator\\JS Lessons\\src\\App.tsx",["92","93"],"D:\\Programming\\IT-Incubator\\JS Lessons\\src\\redux\\currencyReducer.ts",[],"D:\\Programming\\IT-Incubator\\JS Lessons\\src\\lessons\\lesson8\\lesson8.ts",["94"],"import './lesson_8'\r\n\r\nconsole.log('Lesson 8');\r\n\r\n\r\n// just a plug\r\nexport default () => {\r\n};","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\lessons\\lesson2\\lesson2.ts",["95","96"],"import {finished} from \"stream\";\r\n\r\nconsole.log('lesson 2');\r\n\r\n// Lexical environment\r\n// http://jsflow.org/docs/lex-env/\r\n\r\n//// Closure\r\n// https://learn.javascript.ru/closure\r\n// https://developer.mozilla.org/ru/docs/Web/JavaScript/Closures\r\n// https://medium.com/@stasonmars/%D0%BF%D0%BE%D0%BD%D0%B8%D0%BC%D0%B0%D0%B5%D0%BC-%D0%B7%D0%B0%D0%BC%D1%8B%D0%BA%D0%B0%D0%BD%D0%B8%D1%8F-%D0%B2-javascript-%D1%80%D0%B0%D0%B7-%D0%B8-%D0%BD%D0%B0%D0%B2%D1%81%D0%B5%D0%B3%D0%B4%D0%B0-c211805b6898\r\n// https://www.youtube.com/watch?v=pahO5XjnfLA\r\n\r\n//// Сurrying\r\n// https://learn.javascript.ru/currying-partials\r\n// https://medium.com/@stasonmars/%D0%BF%D0%BE%D0%BD%D0%B8%D0%BC%D0%B0%D0%B5%D0%BC-%D0%BA%D0%B0%D1%80%D1%80%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-%D0%B2-javascript-5ec4a1d88827\r\n\r\n// Pattern Module\r\n// https://habr.com/ru/company/ruvds/blog/419997/\r\n\r\n// Recursion\r\n// https://learn.javascript.ru/recursion\r\n// https://www.youtube.com/watch?v=Kuq6oIN3PH0\r\n\r\n\r\n// Task 01\r\n// Реализовать функцию sum которая суммирует 2 числа следующим образом sum(3)(6) === 9\r\n\r\nconst sum = (a: number) => {\r\n    return (b: number) => {\r\n        return a + b\r\n    }\r\n}\r\n\r\nconsole.log(sum(3)(6))\r\n\r\n// Task 02\r\n// Реализовать функцию makeCounter которая работает следующим образом:\r\n// const counter = makeCounter();\r\n// counter(); // 1\r\n// counter(); // 2\r\n// const counter2 = makeCounter();\r\n// counter2(); // 1\r\n// counter(); // 3\r\n\r\nconst makeCounter = () => {\r\n    let count = 0;\r\n    return () => {\r\n        return ++count;\r\n    }\r\n}\r\n\r\nconst counter = makeCounter();\r\nconsole.log(counter());\r\nconsole.log(counter());\r\nconst counter2 = makeCounter();\r\nconsole.log(counter2());\r\nconsole.log(counter());\r\n\r\n\r\n// Task 03\r\n// Переписать функцию из Task 02 так, что бы она принимала число в качестве аргумента и это число было стартовым значением счетчика\r\n// и возвращала следующий объект методов:\r\n// increase: +1\r\n// decrease: -1\r\n// reset: установить счетчик в 0;\r\n// set: установить счетчик в заданное значение;\r\n\r\nconst makeUltraCounter = (n: number) => {\r\n    let count = n;\r\n    return {\r\n        increase: () => {\r\n            ++count\r\n        },\r\n        decrease: () => {\r\n            --count\r\n        },\r\n        reset: () => {\r\n            count = 0\r\n        },\r\n        set: (n: number) => {\r\n            count = n\r\n        },\r\n        getCount: () => {\r\n            return count\r\n        }\r\n    }\r\n}\r\n\r\nconst counterUltra = makeUltraCounter(2);\r\ncounterUltra.increase();\r\ncounterUltra.increase();\r\nconsole.log(counterUltra.getCount()); // 4\r\ncounterUltra.decrease();\r\nconsole.log(counterUltra.getCount()); // 3\r\ncounterUltra.set(5);\r\nconsole.log(counterUltra.getCount()); // 5\r\ncounterUltra.reset();\r\nconsole.log(counterUltra.getCount()); // 0\r\n\r\n// Task 04*\r\n// Реализовать функцию superSum которая принимает число в качестве аргумента, которое указывает на количество слагаемых\r\n// и что бы корректно работали следующие вызовы:\r\n// 1) superSum(0) //0\r\n// 2) superSum(3)(2)(5)(3) //10\r\n// 3) superSum(3)(2)(5,3) //10\r\n// 4) superSum(3)(2,5,3) //10\r\n// 5) superSum(3)(2,5)(3) //10\r\n// 6) superSum(3)(2,5)(3,9) //10\r\n\r\n// function superSum(...a: any) {\r\n//\r\n//     let currentSum = a;\r\n//\r\n//     function f(...b: any) {\r\n//         currentSum += b;\r\n//         return f;\r\n//     }\r\n//\r\n//     f.toString = function() {\r\n//         return currentSum;\r\n//     };\r\n//\r\n//     return f;\r\n// }\r\n//\r\n// console.log(superSum(3)(2)(5)(3))\r\n// console.log(superSum(3)(2,5)(3,9) )\r\n\r\n\r\n// P.S. типизируйте только аргументы, а при вызове функции используйте @ts-ignore\r\n\r\n// Task 05\r\n// решить все задачи по рекурсии которые даны в конце статьи https://learn.javascript.ru/recursion\r\n// Напишите функцию sumTo(n), которая вычисляет сумму чисел 1 + 2 + ... + n.\r\n\r\nconst sumNumberToN = (n : number): number => {\r\n    return n > 0 ? n + sumNumberToN(n - 1) : 0;\r\n}\r\n\r\nconsole.log(sumNumberToN(100))\r\n\r\n// Вычислить факториал\r\nconst factorial = (n : number): number => {\r\n    return n ? n * factorial(n - 1) : 1;\r\n}\r\n\r\nconsole.log(factorial(5))\r\n\r\n// Числа Фибоначчи\r\nconst fib = (n : number): number => {\r\n    return n <= 1 ? n : fib(n - 1) + fib(n - 2);\r\n}\r\n\r\nconsole.log(fib(6))\r\n\r\n// Напишите функцию printList(list), которая выводит элементы списка по одному.\r\n\r\nlet list: any = {\r\n    value: 1,\r\n    next: {\r\n        value: 2,\r\n        next: {\r\n            value: 3,\r\n            next: {\r\n                value: 4,\r\n                next: null\r\n            }\r\n        }\r\n    }\r\n};\r\n// @ts-ignore\r\nconst printList = (list) => {\r\n    console.log(list.value)\r\n    if (list.next) {\r\n        printList(list.next);\r\n    }\r\n}\r\n\r\nconsole.log(printList(list))\r\n\r\n// Task 06\r\n// написать функцию, которая повторяет функционал метода flat массива на всю глубину.\r\nconst arr: any = [1, 2, [3, 4, [5, 6]]];\r\n\r\nfunction deepFlat(arr: any[]): any[] {\r\n    let result: any[] = [];\r\n\r\n    arr.forEach((item) => {\r\n        if (Array.isArray(item)) {\r\n            result = result.concat(deepFlat(item));\r\n        } else {\r\n            result.push(item);\r\n        }\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\nconsole.log(deepFlat(arr));\r\n\r\n\r\n// just a plug\r\nexport default () => {\r\n};","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\lessons\\lesson6\\lesson6.ts",["97"],"console.log('Lesson 6');\r\n\r\n// Class\r\n// https://learn.javascript.ru/classes\r\n// https://medium.com/front-stories/%D0%BA%D0%B0%D0%BA-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D1%8E%D1%82-%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D1%8B-%D0%B2-javascript-7978c0003f1d\r\n// https://www.typescriptlang.org/docs/handbook/classes.html\r\n// https://www.youtube.com/watch?v=BASquaxab_w\r\n// https://www.youtube.com/watch?v=uLY9GXGMXaA\r\n\r\n// Task 01\r\n// Создайте структуру с именем student, содержащую поля: имя и фамилия, номер группы, успеваемость (массив из пяти элементов).\r\n// Создать массив из десяти элементов такого типа, упорядочить записи по возрастанию среднего балла.\r\n// Добавить возможность вывода фамилий и номеров групп студентов, имеющих оценки, равные только 4 или 5.\r\n\r\n// Task 02\r\n// Создать класс с двумя переменными. Добавить конструктор с входными параметрами и инициализирующий члены класса по умолчанию.\r\n// Можно ли создать метод на экземпляре класса который будет удалять сам экземпляр класса?\r\n// Можно ли создать метод класса который будет удалять экземпляр класса?\r\n\r\n// Task 03\r\n// Составить описание класса для представления времени. Предусмотреть возможности установки времени и изменения его отдельных\r\n// полей (час, минута, секунда) с проверкой допустимости вводимых значений. В случае недопустимых значений полей выбрасываются исключения.\r\n// Создать методы изменения времени на заданное количество часов, минут и секунд.\r\n// Создать метод выводящий время в строке формата HH:MM:SS\r\n// Создать класс по вышеуказанному описанию\r\n\r\n// Task 04\r\n// Класс Покупатель: Фамилия, Имя, Адрес, Номер банковского счета;\r\n// Методы: установка значений атрибутов, получение значений атрибутов, вывод информации.\r\n// Создать массив объектов данного класса.\r\n// Вывести список покупателей в алфавитном порядке и список покупателей, у которых номер кредитной карточки находится в заданном диапазоне.\r\n\r\n// Task 05\r\n// Создать класс машина - имеющий марку, число цилиндров, мощность. Определить конструктор и функцию печати.\r\n// Создать производный класс – грузовик, имеющий грузоподъемность кузова.\r\n// Определить функции переназначения марки и грузоподъемности.\r\n\r\n// just a plug\r\nexport default () => {\r\n};","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\lessons\\lesson5\\lesson5.ts",["98","99","100","101","102"],"console.log('Lesson 5');\r\n\r\n// Keyword - this\r\n// https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/this\r\n// https://learn.javascript.ru/object-methods\r\n// https://habr.com/ru/company/ruvds/blog/419371/\r\n// https://www.youtube.com/watch?v=aQkgUUmUJy4&list=PLqKQF2ojwm3l4oPjsB9chrJmlhZ-zOzWT\r\n\r\n// А тут заходим и ставим лайк!!!\r\n// https://www.youtube.com/watch?v=T1vJ8OdJq0o\r\n\r\n// https://www.youtube.com/watch?v=xY-mwUzDjsk\r\n\r\n// Keyword - new. Function-constructor\r\n// https://learn.javascript.ru/constructor-new\r\n// https://metanit.com/web/javascript/4.5.php\r\n// https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/new\r\n\r\n// Call, Apply, Bind\r\n// https://learn.javascript.ru/call-apply-decorators\r\n// https://medium.com/@stasonmars/%D0%BF%D0%BE%D0%B4%D1%80%D0%BE%D0%B1%D0%BD%D0%BE-%D0%BE-%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D0%B0%D1%85-apply-call-%D0%B8-bind-%D0%BD%D0%B5%D0%BE%D0%B1%D1%85%D0%BE%D0%B4%D0%B8%D0%BC%D1%8B%D1%85-%D0%BA%D0%B0%D0%B6%D0%B4%D0%BE%D0%BC%D1%83-javascript-%D1%80%D0%B0%D0%B7%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D1%87%D0%B8%D0%BA%D1%83-ddd5f9b06290\r\n\r\n\r\n// Task 01\r\n// Дан объект someObj, реализуйте функцию greeting и присвойте ее ключу объекта с аналогичным именем.\r\n// Функция должна вернуть строку `My name is ${name}. I am ${age}`, где name и age берутся из свойств объекта\r\n\r\ntype someObjType = {\r\n    name: string;\r\n    age: number;\r\n}\r\n\r\nlet someObj:someObjType = {\r\n    name: 'Eugene',\r\n    age: 32\r\n}\r\n\r\n// Task 02\r\n// реализовать счетчик counter в виде объекта со следующими методами:\r\n// get current count; - выводит текущее значение счетчика\r\n// increment; - увеличивает значение счетчика на 1\r\n// decrement; - уменьшает значение счетчика на 1\r\n// set current count; - принимает и присваивает значение счетчику\r\n// rest current count - устанавливает значение счетчика равным 0\r\n// все методы должны ссылаться на сам объект\r\n\r\n// Task 03\r\n// переделайте код из Task 02, что бы сработал следующий код:\r\n// counter.setCurrentCount(10).increment().increment().increment().decrement().getCurrentCount() // 12\r\n\r\n// Task 04\r\n// Написать функцию конструктор myFirstConstructorFunc которая принимает 2 параметра name и age и возвращает объект\r\n// у которого будут эти свойства и метод greeting из Task 01\r\n\r\n// Task 05 есть 2 объекта One и Two. С помощью bind и метода sayHello заставьте поздороваться объект One\r\n\r\nlet One = {name: 'One'};\r\nlet Two = {name: 'Two', sayHello: function() {console.log(`Hello, my name is ${this.name}`)}};\r\n\r\n// Task 06\r\n// создайте объект helperObj у которого есть следующие методы:\r\n// changeName - меняет значение у свойства name объекта на полученное значение\r\n// setAge - устанавливает полученное значение в свойство age объекта\r\n// greeting - используется функция sayHello из Task 05\r\n// можно использовать @ts-ignore\r\n\r\n// Bind\r\n// 1) Дана функция sumTwoNumbers, реализовать функцию bindNumber которая принимает функцию sumTwoNumbers и число, и\r\n// возвращает другую функцию, которое также принимает число и возвращает сумму этих чисел. Замыкание использовать нельзя\r\nfunction sumTwoNumbers(a:number,b:number):number {return a + b};\r\n\r\n// 2) Напишите функцию которая принимает первым аргументом объект One, а вторым helperObj. Данная функция\r\n// возвращает другую функцию которая принимает строку в качестве аргумента и устанавливает ее свойству name объекта One\r\n// 3) Одной строкой установить с помощью helperObj объекту Two поле age в значение 30\r\n// 4) Создать метод hi у объекта One, который всегда вызывает метод greeting объекта helperObj от имени Two\r\n\r\n// Реализовать задачи 2-4 из Bind с помощью Call\r\n\r\n\r\n\r\n// just a plug\r\nexport default () => {};","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\lessons\\lesson7\\lesson7.ts",["103"],"console.log('Lesson 7');\r\n\r\n// __Proto__\r\n// https://learn.javascript.ru/prototype-inheritance\r\n// https://habr.com/ru/post/518360/\r\n// https://learn.javascript.ru/native-prototypes\r\n\r\n// Prototype\r\n// https://learn.javascript.ru/function-prototype\r\n// https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/prototype\r\n\r\n\r\n// https://www.youtube.com/watch?v=aQkgUUmUJy4&t=21s\r\n// https://www.youtube.com/watch?v=b55hiUlhAzI\r\n\r\n\r\n//Task 01\r\n// Реализовать класс Animal который принимает name(по умолчанию 'Animal') в качестве параметра, у которого будет 3\r\n// метода walk, eat, sleep - каждый метод должен выводить в консоль строку имя + действие. Пример:\r\n// walk => `${this.name} walking`\r\n// проверить, что методы работают\r\n\r\n\r\n//Task 02\r\n// Реализовать класс Monkey на базе класса Animal,  конструктор принимает name(по умолчанию 'Monkey') в качестве\r\n// параметра, реализовать методы roar и climb аналогично классу Animal\r\n// проверить, что все методы работают\r\n\r\n\r\n//Task 03\r\n// Реализовать класс Human на базе класса Monkey, конструктор принимает name(по умолчанию 'Human') в качестве\r\n// параметра, реализовать методы speak и think аналогично классу Animal\r\n// проверить, что все методы работают\r\n\r\n\r\n// Task 04\r\n// Реализовать таски 01-03 через функции конструкторы в отдельном JS файле, реализовать наследование\r\n\r\n\r\n// Task 05\r\n// Используя метод Apply реализовать свой собственный метод bind\r\n\r\n\r\n// just a plug\r\nexport default () => {};","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\lessons\\lesson1\\lesson1.tsx",[],["104","105"],"D:\\Programming\\IT-Incubator\\JS Lessons\\src\\lessons\\lesson3\\Lesson3.tsx",["106","107"],"import React, { useState } from 'react';\r\nimport API from './API';\r\nimport './lesson_3';\r\n\r\nconst Lesson3 = () => {\r\n    const [searchName, setSearchName] = useState('');\r\n    const [serachResult, setSerachResult] = useState('');\r\n    const [searchNameByType, setSearchNameByType] = useState('');\r\n    const [serachResultByType, setSerachResultByType] = useState('');\r\n\r\n    const searchFilm = () => {\r\n        API.searchFilmsByTitle(searchName)\r\n    };\r\n\r\n    const searchByType = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        const type: string = e.currentTarget.dataset.t ? e.currentTarget.dataset.t : '';\r\n        API.searchFilmsByType(searchNameByType, type)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Promises</h1>\r\n            <div>\r\n                <h3><p>Search by name:</p></h3>\r\n                <input type=\"text\" value={searchName} onChange={(e) => setSearchName(e.currentTarget.value)}/>\r\n                <button onClick={searchFilm}>Search</button>\r\n                <div>\r\n                    {serachResult}\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <h3><p>Search by type:</p></h3>\r\n                <input type=\"text\" value={searchNameByType} onChange={(e) => setSearchNameByType(e.currentTarget.value)}/>\r\n                <button onClick={searchByType} data-t='movie'>Movie</button>\r\n                <button onClick={searchByType} data-t='series'>Series</button>\r\n                <div>\r\n                    {serachResultByType}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Lesson3;","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\lessons\\lesson4\\Lesson4.tsx",[],"D:\\Programming\\IT-Incubator\\JS Lessons\\src\\lessons\\lesson8\\lesson_8.js",["108","109","110","111"],"// Task 1\r\n// Есть некоторая строка (const str = 'fgfggg';), что будет, если мы возьмем str[0]\r\n\r\n// Task 2\r\n// Реализуйте необходимый код, что бы выражение (2).plus(3).minus(1) сработало и вернуло 4\r\n\r\n// Task 3\r\n// Реализуйте функцию, которая принимает следующие аргументы (строки) '*', '1', 'b', '1c', и возвращает строку '1*b*1c'\r\n\r\n// Task 4\r\n// Напишите функцию которая найдет сумму всех вершин в структуре данны типа tree\r\n// Рекурсивно\r\n// В цикле\r\n\r\nconst tree = {\r\n\tvalueNode: 3,\r\n\tnext: [{\r\n\t\tvalueNode: 1,\r\n\t\tnext: null\r\n\t},\r\n\t\t{\r\n\t\t\tvalueNode: 3,\r\n\t\t\tnext: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tvalueNode: 2,\r\n\t\t\tnext: null\r\n\t\t},\r\n\t\t{\r\n\t\t\tvalueNode: 2,\r\n\t\t\tnext: [\r\n\t\t\t\t{\r\n\t\t\t\t\tvalueNode: 1,\r\n\t\t\t\t\tnext: null\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalueNode: 5,\r\n\t\t\t\t\tnext: null\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}]\r\n};\r\n\r\n// Task 5\r\n// исправить код, что бы работал правильно\r\n\r\nfor (var i = 0; i < 10; i++) {\r\n\tsetTimeout(function () {\r\n\t\tconsole.log(i);\r\n\t}, 100);\r\n}\r\n\r\n// Task 6\r\n// Реализуйте функцию Foo, что бы все корректно работало\r\n\r\nfunction Book(name, author) {\r\n\tthis.name = name;\r\n\tthis.author = author;\r\n\treturn this;\r\n}\r\n\r\n// function Foo(Book, 'Учебник javascript', 'Петр Сергеев')\r\n//\r\n// var book = Foo(Book, 'js', 'petr');\r\n// console.log(book.name);\r\n\r\n// Task 7\r\n// Реализовать функцию f: f(2, 3) -> 5, при вызове f(2)(3), тоже вернет 5\r\n\r\n// Task 8\r\n// Реализовать функцию f: f(1)(2)(3)() -> 6, f(0)(3)(1)(5)() -> 8\r\n\r\n// Task 9\r\n// Реализовать функции seven, plus, one, five, minus, two так, что бы следующие вызовы работали seven(plus(one())) -> 8. five(minus(two())) -> 3\r\n\r\n// Task 10\r\n// Реализовать функцию сортировки массива пузырьком\r\n\r\n// Task 11\r\n// Есть строка, состоящая из разных скобок - str = \"())({}}{()][][\", написать функцию проверки закрыты ли все.\r\n\r\n// Task 12\r\n// Необходимо написать функцию, принимающую в аргументах массив целых чисел и возвращающую новый массив, состоящий только из уникальных значений первого массива.\r\n\r\n// Task 13\r\n// Написать функцию, принимающую аргументом массив чисел и возвращающую новый массив, состоящий из удвоенных значений первого.\r\n// f([1, 2, null, 7, 8, null, 3]); // => [2, 4, 14, 16, 6]\r\n\r\n// Task 14\r\n// Необходимо написать функцию, возвращающую значения всех вершин дерева\r\n// getTreeValues(tree); // => [1, 2, 3, 4, 5, 6, 7]\r\n\r\nconst tree2 = {\r\n\tvalue: 1,\r\n\tchildren: [\r\n\t\t{\r\n\t\t\tvalue: 2,\r\n\t\t\tchildren: [\r\n\t\t\t\t{ value: 4 },\r\n\t\t\t\t{ value: 5 },\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\tvalue: 3,\r\n\t\t\tchildren: [\r\n\t\t\t\t{ value: 6 },\r\n\t\t\t\t{ value: 7 },\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n};\r\n\r\n// Task 15\r\n// Необходимо написать функцию, возвращающую сумму всех вершин дерева из Task 14\r\n\r\n// Task 16\r\n// Надо реализовать «бомбу» (в виде функции-конструктора), которая получает на входе время, через которое взорвется и\r\n// некоторый «звук взрыва» (строку, которую вернет через заданное время).\r\n\r\n// Task 17\r\n// Необходимо реализовать функцию, принимающую в аргументах строку, состоящую из букв и вернуть новую строку,\r\n// в которой повторяющиеся буквы заменены количеством повторений.\r\n// rle('AVVVBBBVVXDHJFFFFDDDDDDHAAAAJJJDDSLSSSDDDD'); // => 'AV3B3V2XDHJF4D6HA4J3D2SLS3D4'\r\n\r\n// Task 18\r\n// Реализуйте функцию isSorted(), которая возвращает true или false в зависимости о того, отсортирован ли переданный ей числовой массив.\r\n\r\n// Task 19\r\n// Реализуйте функцию missing(), которая принимает неотсортированный массив уникальных чисел (то есть, числа в нём не повторяются)\r\n// от 1 до некоего числа n, и возвращает число, отсутствующее в последовательности. Там может быть либо одно отсутствующее число,\r\n// либо их может не быть вовсе.\r\n// missing([])                         // undefined\r\n// missing([1, 4, 3])                  // 2\r\n// missing([2, 3, 4])                  // 1\r\n// missing([5, 1, 4, 2])               // 3\r\n// missing([1, 2, 3, 4])               // undefined\r\n\r\n// Task 20\r\n// Реализуйте класс LinkedList, не используя встроенные массивы JavaScript ( [] ). Ваш LinkedList должен поддерживать лишь 2 метода: add() и has().\r\n// class LinkedList {...}\r\n// let list = new LinkedList(1, 2, 3)\r\n// list.add(4)                           // undefined\r\n// list.add(5)                           // undefined\r\n// list.has(1)                           // true\r\n// list.has(4)                           // true\r\n// list.has(6)                           // false\r\n\r\n// Task 21\r\n// Что выведет консоль?\r\n\r\nPromise\r\n\t.resolve()\r\n\t.then(() => console.log(1))\r\n\t.then(() => console.log(2))\r\n\t.then(() => console.log(3));\r\n\r\nPromise\r\n\t.resolve()\r\n\t.then(() => console.log(4))\r\n\t.then(() => console.log(5))\r\n\t.then(() => console.log(6));",["112","113"],"D:\\Programming\\IT-Incubator\\JS Lessons\\src\\lessons\\lesson3\\API.ts",["114","115"],"import axios from 'axios';\r\n\r\nconst configOMB = {\r\n    baseURL: 'http://www.omdbapi.com',\r\n};\r\nconst key = '';\r\nconst axiosInstance = axios.create(configOMB);\r\n\r\nconst API = {\r\n    searchFilmsByTitle: (title: string) => {\r\n    },\r\n    searchFilmsByType: (title: string, type: string) => {\r\n    }\r\n};\r\n\r\n\r\nexport default API;\r\n","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\lessons\\lesson3\\lesson_3.ts",["116"],"console.log('lesson 3');\r\n\r\n// Event loop\r\n// https://learn.javascript.ru/event-loop\r\n// https://habr.com/ru/company/ruvds/blog/340508/\r\n// https://www.youtube.com/watch?v=8aGhZQkoFbQ\r\n// https://www.youtube.com/watch?v=j4_9BZezSUA\r\n// https://www.jsv9000.app/\r\n\r\n// Promise\r\n// https://learn.javascript.ru/promise-basics\r\n// https://www.youtube.com/watch?v=1idOY3C1gYU\r\n\r\n\r\n// https://jsonplaceholder.typicode.com/posts/1\r\n// https://habr.com/ru/company/oleg-bunin/blog/417461/?_ga=2.54695343.543933152.1602500664-1040035071.1596811661\r\n\r\n\r\n// just a plug\r\nexport default ()=>{};","D:\\Programming\\IT-Incubator\\JS Lessons\\src\\lessons\\lesson4\\lesson_4.ts",["117","118"],"D:\\Programming\\IT-Incubator\\JS Lessons\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx",[],"D:\\Programming\\IT-Incubator\\JS Lessons\\src\\redux\\actions.ts",[],"D:\\Programming\\IT-Incubator\\JS Lessons\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":15},{"ruleId":"123","severity":1,"message":"127","line":5,"column":8,"nodeType":"125","messageId":"126","endLine":5,"endColumn":15},{"ruleId":"128","severity":1,"message":"129","line":7,"column":1,"nodeType":"130","endLine":8,"endColumn":3},{"ruleId":"123","severity":1,"message":"131","line":1,"column":9,"nodeType":"125","messageId":"126","endLine":1,"endColumn":17},{"ruleId":"128","severity":1,"message":"129","line":204,"column":1,"nodeType":"130","endLine":205,"endColumn":3},{"ruleId":"128","severity":1,"message":"129","line":39,"column":1,"nodeType":"130","endLine":40,"endColumn":3},{"ruleId":"123","severity":1,"message":"132","line":33,"column":5,"nodeType":"125","messageId":"126","endLine":33,"endColumn":24},{"ruleId":"123","severity":1,"message":"133","line":57,"column":5,"nodeType":"125","messageId":"126","endLine":57,"endColumn":8},{"ruleId":"123","severity":1,"message":"134","line":58,"column":5,"nodeType":"125","messageId":"126","endLine":58,"endColumn":8},{"ruleId":"123","severity":1,"message":"135","line":70,"column":10,"nodeType":"125","messageId":"126","endLine":70,"endColumn":23},{"ruleId":"128","severity":1,"message":"129","line":82,"column":1,"nodeType":"130","endLine":82,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":45,"column":1,"nodeType":"130","endLine":45,"endColumn":25},{"ruleId":"119","replacedBy":"136"},{"ruleId":"121","replacedBy":"137"},{"ruleId":"123","severity":1,"message":"138","line":7,"column":26,"nodeType":"125","messageId":"126","endLine":7,"endColumn":41},{"ruleId":"123","severity":1,"message":"139","line":9,"column":32,"nodeType":"125","messageId":"126","endLine":9,"endColumn":53},{"ruleId":"140","severity":1,"message":"141","line":15,"column":7,"nodeType":"125","messageId":"126","endLine":15,"endColumn":11},{"ruleId":"142","severity":1,"message":"143","line":48,"column":13,"nodeType":"144","messageId":"145","endLine":50,"endColumn":3},{"ruleId":"140","severity":1,"message":"146","line":56,"column":10,"nodeType":"125","messageId":"126","endLine":56,"endColumn":14},{"ruleId":"140","severity":1,"message":"147","line":93,"column":7,"nodeType":"125","messageId":"126","endLine":93,"endColumn":12},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"148","line":6,"column":7,"nodeType":"125","messageId":"126","endLine":6,"endColumn":10},{"ruleId":"123","severity":1,"message":"149","line":7,"column":7,"nodeType":"125","messageId":"126","endLine":7,"endColumn":20},{"ruleId":"128","severity":1,"message":"129","line":20,"column":1,"nodeType":"130","endLine":20,"endColumn":23},{"ruleId":"123","severity":1,"message":"150","line":1,"column":9,"nodeType":"125","messageId":"126","endLine":1,"endColumn":12},{"ruleId":"128","severity":1,"message":"129","line":174,"column":1,"nodeType":"130","endLine":175,"endColumn":3},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"@typescript-eslint/no-unused-vars","'Lesson1' is defined but never used.","Identifier","unusedVar","'Lesson3' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'finished' is defined but never used.","'someObj' is assigned a value but never used.","'One' is assigned a value but never used.","'Two' is assigned a value but never used.","'sumTwoNumbers' is defined but never used.",["151"],["152"],"'setSerachResult' is assigned a value but never used.","'setSerachResultByType' is assigned a value but never used.","no-unused-vars","'tree' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","FunctionExpression","unsafeRefs","'Book' is defined but never used.","'tree2' is assigned a value but never used.","'key' is assigned a value but never used.","'axiosInstance' is assigned a value but never used.","'log' is defined but never used.","no-global-assign","no-unsafe-negation"]